{"version":3,"sources":["Uploader.js","Upscale.js","App.js","reportWebVitals.js","index.js"],"names":["Uploader","props","setPictures","setPic","pic","setTab","setUpload","clickUpload","ev","a","preventDefault","formData","FormData","append","axios","method","url","data","config","headers","response","console","log","action","encType","withPreview","buttonText","length","name","withIcon","onChange","picture","imgExtension","maxFileSize","singleImage","Button","disabled","onClick","color","variant","component","type","useButtonStyles","makeStyles","theme","root","display","margin","spacing","width","height","extendedIcon","marginRight","Upscale","filename","buttonStyle","useState","isUpScaled","setIsUpScaled","isUpscaling","setIsUpscaling","clickUpscale","className","src","alt","CircularProgress","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","useStyles","flexGrow","backgroundColor","palette","background","paper","a11yProps","App","pictures","tabValue","setTabValue","uploadClicked","setUploadClicked","classes","AppBar","position","Tabs","event","newValue","Tab","label","then","catch","errors","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df4df17e.chunk.js","sourcesContent":["import React from \"react\";\nimport ImageUploader from \"react-images-upload\";\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\n// https://medium.com/@eric.hung0404/deal-with-cors-without-flask-cors-an-example-of-react-and-flask-5832c44108a7\n\nconst Uploader = props => {\n  const setPictures = props.setPic;\n  const pic = props.pic;\n  const setTab = props.setTab\n  const setUpload = props.setUpload;\n\n  const onDrop = picture => {\n    setPictures(picture[0]);\n  };\n\n  const clickUpload = async (ev) => {\n    ev.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"file\", pic);\n\n    const response = await axios({\n        method: 'post',\n        url: 'http://localhost:5000/upload',\n        data: formData,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\n    })\n    \n    console.log(response);\n    setTab(1);\n    setUpload(true);\n  }\n\n  return (\n    <div>\n      <form action=\"http://localhost:5000/upload\" method=\"post\" encType=\"multipart/form-data\">\n        <ImageUploader\n          withPreview={true}\n          buttonText={(typeof pic==='undefined' || pic.length===0) ? 'Choose Image' : pic.name + ' chosen, click to change'}\n          withIcon={true}\n          onChange={onDrop}\n          imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          maxFileSize={5242880}\n          singleImage={true}\n        />\n        \n        <Button disabled={typeof pic==='undefined' || pic.length===0} onClick={clickUpload} color=\"secondary\" variant=\"contained\" component=\"span\" type=\"submit\">Upload</Button>\n\n      </form>\n    </div>\n  );\n};\n\nexport default Uploader;","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport './Upscale.css';\n\n// https://roytuts.com/upload-and-display-image-using-python-flask/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\n\nconst useButtonStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Upscale = props => {\n  const filename = props.filename;\n  const buttonStyle = useButtonStyles();\n  const [isUpScaled, setIsUpScaled] = useState(false);\n  const [isUpscaling, setIsUpscaling] = useState(false);\n\n  const clickUpscale = async (ev) => {\n    ev.preventDefault();\n\n    setIsUpscaling(true);\n    // axios({\n    //     method: 'post',\n    //     url: 'http://localhost:5000/upscale',\n    //     config: { headers: { 'Content-Type': 'applications/json' } }\n    // })\n    //     .then(response => setIsUpScaled(response['data']['result']))\n    //     .catch(errors => console.log(errors))\n    const response = await axios({method: 'post', url: 'http://localhost:5000/upscale', config: { headers: { 'Content-Type': 'applications/json' } }});\n    console.log(response);\n    setIsUpscaling(false);\n    setIsUpScaled('http://localhost:5000/static/'+response['data']['result']);\n  }\n  \n  return (\n    <div className=\"rowC\">\n      <div>\n        <img src={\"http://localhost:5000/static/\"+filename} alt={filename}/>  \n      </div>\n      <div>\n        <Button color=\"secondary\" variant=\"contained\" onClick={clickUpscale} className={buttonStyle.margin}>\n          {isUpscaling ? <CircularProgress /> : 'Upscale'}\n        </Button>\n      </div>\n      <div>\n        <img src={isUpScaled ? isUpScaled : \"http://localhost:5000/static/__EmPtY__.jpg\"} alt={\"empty.jpg\"}/> \n      </div>\n    </div>\n\n  );\n}\n\nexport default Upscale;","import './App.css';\nimport React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tab, Tabs } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Uploader from './Uploader';\nimport Upscale from './Upscale';\nimport axios from 'axios';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction App() {\n  const [pictures, setPictures] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [uploadClicked, setUploadClicked] = useState(false);\n  const classes = useStyles();\n\n  const handleChangeTabs = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const clickClear = (ev) => {\n    ev.preventDefault();\n\n\n    setTabValue(0);\n    setUploadClicked(false);\n\n    axios({\n        method: 'post',\n        url: 'http://localhost:5000/clear',\n        config: { headers: { 'Content-Type': 'applications/json' } }\n    })\n        .then(response => console.log(response))\n        .catch(errors => console.log(errors))\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n          <Tabs value={tabValue} onChange={handleChangeTabs}>\n              <Tab label=\"Upload Image\" {...a11yProps(0)}/>\n              <Tab label=\"Upscale\" {...a11yProps(1)} disabled={!uploadClicked}/>\n          </Tabs>\n      </AppBar>\n\n      <TabPanel value={tabValue} index={0}>\n        <Uploader \n          setPic={setPictures}\n          pic={pictures}\n          setTab={setTabValue}\n          setUpload={setUploadClicked}\n        />\n      </TabPanel>\n\n      <TabPanel value={tabValue} index={1}>\n        <Upscale filename={pictures ? pictures.name : \"http://localhost:5000/image/__EmPtY__.jpg\"}/>\n      </TabPanel>\n\n\n      <Button color=\"secondary\" variant=\"contained\" onClick={clickClear}>Clear</Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}